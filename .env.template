# Ash Analytics Dashboard Environment Configuration
# Copy this file to .env and configure for your environment

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Node.js Environment (development, production)
NODE_ENV=production

# Dashboard server port
PORT=8883
HTTPS_PORT=8443
ENABLE_SSL=true

# External port mapping (for Docker)
DASH_PORT=8883

# =============================================================================
# SERVICE ENDPOINTS
# =============================================================================
# Ash Bot API endpoint
# For Docker: use service name (10.20.30.253:8882)
# For external: use full URL (http://your-bot-server:8882)
ASH_BOT_API=http://10.20.30.253:8882

# Ash NLP Server API endpoint
ASH_NLP_API=http://10.20.30.16:8881

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================
# Cache TTL in seconds (default: 5 minutes)
CACHE_TTL=300

# Enable analytics collection
ENABLE_ANALYTICS=true

# Analytics data retention in days
ANALYTICS_RETENTION_DAYS=90

# =============================================================================
# REAL-TIME FEATURES
# =============================================================================
# Enable Socket.IO for real-time updates
ENABLE_SOCKET_IO=true

# Metrics update interval in seconds
METRICS_UPDATE_INTERVAL=300

# =============================================================================
# DASHBOARD BRANDING
# =============================================================================
# Main dashboard title
DASHBOARD_TITLE=Ash Analytics Dashboard

# Dashboard subtitle
DASHBOARD_SUBTITLE=The Alphabet Cartel Crisis Detection Analytics

# Community name
COMMUNITY_NAME=The Alphabet Cartel

# Discord server invite link
COMMUNITY_DISCORD=https://discord.gg/alphabetcartel

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Log file name (stored in ./logs/)
LOG_FILE=ash-dash.log

# Enable debug logging (performance impact)
ENABLE_DEBUG_LOGGING=false

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# Enable CORS (Cross-Origin Resource Sharing)
ENABLE_CORS=true

# Rate limiting window in milliseconds (default: 15 minutes)
RATE_LIMIT_WINDOW=900000

# Maximum requests per window per IP
RATE_LIMIT_MAX=100

# Allowed origins for CORS (comma-separated)
ALLOWED_ORIGINS=*

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis host (use service name in Docker)
REDIS_HOST=ash-redis

# Redis port
REDIS_PORT=6379

# Redis password (if required)
# REDIS_PASSWORD=your_redis_password

# Redis database number
REDIS_DB=0

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================
# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Health check timeout in seconds
HEALTH_CHECK_TIMEOUT=10

# Service request timeout in milliseconds
SERVICE_REQUEST_TIMEOUT=5000

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================
# Maximum request body size
MAX_REQUEST_SIZE=10mb

# Enable request compression
ENABLE_COMPRESSION=true

# Static file cache duration in seconds
STATIC_CACHE_DURATION=3600

# API response cache duration in seconds
API_CACHE_DURATION=300

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Enable development features (only in development)
# ENABLE_DEV_TOOLS=true

# Hot reload for development
# ENABLE_HOT_RELOAD=true

# Mock data for development (when services unavailable)
# ENABLE_MOCK_DATA=false

# =============================================================================
# DOCKER NETWORK SETTINGS
# =============================================================================
# Docker network name (should match your existing Ash network)
DOCKER_NETWORK=ash-network

# Container restart policy
RESTART_POLICY=unless-stopped

# =============================================================================
# WINDOWS 11 SERVER SPECIFIC
# =============================================================================
# Windows firewall configuration note:
# Ensure port 3000 is open in Windows Firewall
# Configure port forwarding if accessing externally

# Docker Desktop settings note:
# Ensure WSL2 backend is enabled
# Verify Docker integration with Windows

# Resource limits note:
# Dashboard uses minimal resources (~128MB RAM, <0.5 CPU)
# Safe to run alongside NLP Server on same machine

# =============================================================================
# TROUBLESHOOTING VARIABLES
# =============================================================================
# Enable verbose logging for troubleshooting
# VERBOSE_LOGGING=false

# Enable API request logging
# LOG_API_REQUESTS=false

# Enable WebSocket debugging
# DEBUG_WEBSOCKETS=false

# Force refresh cache on startup
# FORCE_CACHE_REFRESH=false

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================
# Example for local development:
# NODE_ENV=development
# ASH_BOT_API=http://localhost:8080
# ASH_NLP_API=http://localhost:8881
# ENABLE_DEBUG_LOGGING=true

# Example for production deployment:
# NODE_ENV=production
# ASH_BOT_API=http://ash:8080
# ASH_NLP_API=http://10.20.30.16:8881
# LOG_LEVEL=info

# Example for external access:
# ALLOWED_ORIGINS=https://yourdomain.com,http://localhost:3000
# ENABLE_CORS=true

# =============================================================================
# NOTES
# =============================================================================
# 1. All service endpoints should be accessible from the dashboard container
# 2. The NLP_API endpoint uses direct IP since it's on Windows 11 host
# 3. Bot API uses Docker service name when in same network
# 4. Adjust timeouts based on your hardware performance
# 5. Enable debug logging only for troubleshooting (performance impact)
# 6. Analytics retention affects disk usage - adjust based on available space
# 7. Rate limiting prevents abuse - adjust based on team size
# 8. Cache TTL balances freshness vs performance - lower for more real-time data