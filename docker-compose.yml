services:
  ash-dash:
    # For local development: build locally
#    build:
#      context: .
#      dockerfile: Dockerfile

    # For production: pull from GitHub Container Registry
    image: ghcr.io/the-alphabet-cartel/ash-dash:latest

    container_name: ash-dash
    restart: unless-stopped
    networks:
      - ash-network
    ports:
      - 8883:8883

    environment:
      - GLOBAL_ENVIRONMENT=${GLOBAL_ENVIRONMENT:-production}
      - GLOBAL_DASH_API_PORT=${GLOBAL_DASH_API_PORT:-8883}
      - GLOBAL_DASH_API_PORT=${GLOBAL_DASH_API_PORT:-8883}
      
      # SSL Configuration
      - DASH_ENABLE_SSL=${DASH_ENABLE_SSL:-true}
      - DASH_SSL_CERT_PATH=${DASH_SSL_CERT_PATH:-/app/certs/cert.pem}
      - DASH_SSL_KEY_PATH=${DASH_SSL_KEY_PATH:-/app/certs/key.pem}
      
      # Ash Bot API (Discord Bot with Crisis Detection)
      - GLOBAL_BOT_API_URL=${GLOBAL_BOT_API_URL:-http://10.20.30.253:8882}
      - DASH_BOT_API_TIMEOUT=${DASH_BOT_API_TIMEOUT:-5000}
      
      # Ash NLP Server API (Machine Learning Analysis)
      - GLOBAL_NLP_API_URL=${GLOBAL_NLP_API_URL:-http://10.20.30.253:8881}
      - DASH_NLP_API_TIMEOUT=${DASH_NLP_API_TIMEOUT:-10000}
      
      # Cache Settings
      - DASH_CACHE_TTL=${DASH_CACHE_TTL:-300}
      - DASH_ENABLE_ANALYTICS=${DASH_ENABLE_ANALYTICS:-true}
      - DASH_ANALYTICS_RETENTION_DAYS=${DASH_ANALYTICS_RETENTION_DAYS:-90}
      
      # Real-time Updates
      - DASH_ENABLE_SOCKET_IO=${DASH_ENABLE_SOCKET_IO:-true}
      - DASH_METRICS_UPDATE_INTERVAL=${DASH_METRICS_UPDATE_INTERVAL:-30000}

      # LOGGING & MONITORING
      - GLOBAL_LOG_LEVEL=${GLOBAL_LOG_LEVEL:-info}
      
      # DOCKER SECRETS CONFIGURATION
      - DASH_SSL_CERT_PATH=${DASH_SSL_CERT_PATH:-/app/certs/cert.pem}
      - DASH_SSL_KEY_PATH=${DASH_SSL_KEY_PATH:-/app/certs/key.pem}
      - GLOBAL_SESSION_TOKEN=${GLOBAL_SESSION_TOKEN:-/run/secrets/session_secret}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./cache:/app/cache
      - ./public:/app/public:ro
      - ./dashboard:/app/dashboard:ro
      - ./secrets:/run/secrets:ro
    depends_on:
      - ash-redis
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8883/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1'
        reservations:
          memory: 128M
          cpus: '0.25'

  ash-redis:
    image: redis:7-alpine
    container_name: ash-dash-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - ash-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

volumes:
  redis_data:
    driver: local

networks:
  ash-network:
    driver: bridge